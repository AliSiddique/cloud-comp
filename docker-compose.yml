version: '2'

services:
    nginx: 
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - static_volume:/app/server/django_static
            - media_volume:/app/server/media
            - ./docker/nginx:/etc/nginx/conf.d
        depends_on: 
            - server
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/server/Dockerfile
            
        entrypoint: /app/docker/server/entrypoint.sh
        volumes:
            - static_volume:/app/server/django_static
            - media_volume:/app/server/media
        expose:
            - 8000     
        environment:
            DEBUG: "True"
            STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
            STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
            DEFAULT_FILE_STORAGE: ${DEFAULT_FILE_STORAGE}
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
            AWS_QUERYSTRING_AUTH: ${AWS_QUERYSTRING_AUTH}
            EMAIL_HOST: ${EMAIL_HOST}
            EMAIL_HOST_USER: ${EMAIL_HOST_USER}
            EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
            EMAIL_PORT: ${EMAIL_PORT}
            EMAIL_USE_TLS: ${EMAIL_USE_TLS}
            SENDGRID_API_KEY: ${SENDGRID_API_KEY}
            SECRET_KEY: ${SECRET_KEY}
            # DJANGO DATABASE SETTINGS
            DB_ENGINE:  ${DB_ENGINE}
            DB_DATABASE_NAME:  ${DB_DATABASE_NAME}
            DB_HOST:  ${DB_HOST}
            DB_PORT:  ${DB_PORT}
            DB_USER:  ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            EMAIL_BACKEND: ${EMAIL_BACKEND}

            
volumes:
    static_volume: {}
    media_volume: {}